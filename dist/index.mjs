class t{constructor(t){this.comparison=t}getValue(t){const e=this.comparison(t);if(!parseInt(e))throw"Comparison function have to return integer";return e}}var e={bubble:class extends t{constructor(t,e){super(e),this.array=t}sort(t){const e=this.array;for(let s=0;s<e.length;s++)for(let r=0;r<e.length-s-1;r++)("desc"===t?this.getValue(e[r])<this.getValue(e[r+1]):this.getValue(e[r])>this.getValue(e[r+1]))&&([e[r],e[r+1]]=[e[r+1],e[r]]);return e}},selection:class extends t{constructor(t,e){super(e),this.array=t}sort(t){const e=this.array,s=e.length;for(let r=0;r<s;r++){let a=r;for(let i=r+1;i<s;i++)("desc"==t?this.getValue(e[i])>this.getValue(e[a]):this.getValue(e[i])<this.getValue(e[a]))&&(a=i);r!==a&&([e[r],e[a]]=[e[a],e[r]])}return e}},insertion:class extends t{constructor(t,e){super(e),this.array=t}sort(t){let e=this.array;const s=e.length;for(let r=0;r<s;r++)for(let s=r;s>0;s--)("desc"===t?this.getValue(e[s])>this.getValue(e[s-1]):this.getValue(e[s])<this.getValue(e[s-1]))&&([e[s],e[s-1]]=[e[s-1],e[s]]);return e}},quick:class extends t{constructor(t,e){super(e),this.array=t,this.tmp=[]}sort(t){return this.array=this.partition(this.array,t),this.array}partition(t,e){if(t.length<=1)return t;const s=t.length-1,r=t[s],a=[],i=[];for(let n=0;n<s;n++)("desc"==e?this.getValue(t[n])>this.getValue(r):this.getValue(t[n])<this.getValue(r))?a.push(t[n]):i.push(t[n]);return a.length>0&&i.length>0?[...this.partition(a),r,...this.partition(i)]:a.length>0?[...this.partition(a),r]:[r,...this.partition(i)]}},count:class extends t{constructor(t,e){super(e),this.array=t}sort(t){const e=this.array,s=Math.max(...e.map((t=>this.getValue(t)))),r=Math.abs(Math.min(...e.map((t=>this.getValue(t))))),a=Array(s+r+1).fill(0),i=Array(e.length-1);for(let t=0;t<e.length;t++)a[this.getValue(e[t])+r]++;for(let t=1;t<a.length;t++)a[t]+=a[t-1];for(let s=e.length-1;s>=0;s--)"asc"==t?i[a[this.getValue(e[s])+r]-1]=e[s]:i[Math.abs(a[this.getValue(e[s])+r]-e.length)]=e[s],a[this.getValue(e[s])+r]--;return this.array=i,this.array}}};function s(t,s=(t=>t),{order:r="asc",persist:a=!1,type:i}){if("function"!=typeof s)throw"function comparison must be a function";if(!e[i])throw`${i} is unknown type. please use either one of this \n    bubble || selection || insertion || quick || count`;const n=a?t:[...t];return new e[i](n,s).sort(r)}export{s as default};
